   0  $accept : program $end

   1  program : var_dec ';' program
   2          | function program
   3          |

   4  var_dec : datatype TK_IDENTIFIER ':' literal
   5          | datatype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' literal_list
   6          | datatype TK_IDENTIFIER '[' LIT_INTEGER ']'

   7  function : datatype TK_IDENTIFIER '(' params ')' block

   8  params : datatype TK_IDENTIFIER ',' params
   9         | datatype TK_IDENTIFIER

  10  block : '{' commandlist '}'

  11  commandlist : command ';' commandlist
  12              | command ';'

  13  command : KW_PRINT print_param_list
  14          | KW_READ TK_IDENTIFIER
  15          | KW_RETURN expr
  16          | ifelse
  17          | forloop

  18  print_param_list : expr print_param_list
  19                   | LIT_STRING print_param_list
  20                   | expr
  21                   | LIT_STRING

  22  expr : value
  23       | value operator value

  24  value : literal
  25        | TK_IDENTIFIER
  26        | TK_IDENTIFIER '[' value ']'
  27        | TK_IDENTIFIER '(' value_list ')'

  28  value_list : value value_list
  29             |

  30  operator : OPERATOR_LE
  31           | OPERATOR_GE
  32           | OPERATOR_EQ
  33           | OPERATOR_NE
  34           | OPERATOR_AND
  35           | OPERATOR_OR
  36           | '*'
  37           | '/'
  38           | '-'
  39           | '+'
  40           | '<'
  41           | '>'

  42  ifelse : KW_IF '(' expr ')' KW_THEN command
  43         | KW_IF '(' expr ')' KW_THEN command KW_ELSE command

  44  forloop : KW_FOR '(' expr ')'

  45  command : KW_FOR '(' TK_IDENTIFIER '=' expr "TO" expr ')' command

  46  literal : LIT_INTEGER
  47          | LIT_FALSE
  48          | LIT_TRUE
  49          | LIT_CHAR
  50          | LIT_STRING

  51  datatype : KW_INT
  52           | KW_FLOAT
  53           | KW_BOOL
  54           | KW_CHAR

  55  literal_list : literal
  56               | literal literal_list

state 0
	$accept : . program $end  (0)
	program : .  (3)

	KW_INT  shift 1
	KW_FLOAT  shift 2
	KW_BOOL  shift 3
	KW_CHAR  shift 4
	$end  reduce 3

	program  goto 5
	var_dec  goto 6
	function  goto 7
	datatype  goto 8


state 1
	datatype : KW_INT .  (51)

	.  reduce 51


state 2
	datatype : KW_FLOAT .  (52)

	.  reduce 52


state 3
	datatype : KW_BOOL .  (53)

	.  reduce 53


state 4
	datatype : KW_CHAR .  (54)

	.  reduce 54


state 5
	$accept : program . $end  (0)

	$end  accept


state 6
	program : var_dec . ';' program  (1)

	';'  shift 9
	.  error


state 7
	program : function . program  (2)
	program : .  (3)

	KW_INT  shift 1
	KW_FLOAT  shift 2
	KW_BOOL  shift 3
	KW_CHAR  shift 4
	$end  reduce 3

	program  goto 10
	var_dec  goto 6
	function  goto 7
	datatype  goto 8


state 8
	var_dec : datatype . TK_IDENTIFIER ':' literal  (4)
	var_dec : datatype . TK_IDENTIFIER '[' LIT_INTEGER ']' ':' literal_list  (5)
	var_dec : datatype . TK_IDENTIFIER '[' LIT_INTEGER ']'  (6)
	function : datatype . TK_IDENTIFIER '(' params ')' block  (7)

	TK_IDENTIFIER  shift 11
	.  error


state 9
	program : var_dec ';' . program  (1)
	program : .  (3)

	KW_INT  shift 1
	KW_FLOAT  shift 2
	KW_BOOL  shift 3
	KW_CHAR  shift 4
	$end  reduce 3

	program  goto 12
	var_dec  goto 6
	function  goto 7
	datatype  goto 8


state 10
	program : function program .  (2)

	.  reduce 2


state 11
	var_dec : datatype TK_IDENTIFIER . ':' literal  (4)
	var_dec : datatype TK_IDENTIFIER . '[' LIT_INTEGER ']' ':' literal_list  (5)
	var_dec : datatype TK_IDENTIFIER . '[' LIT_INTEGER ']'  (6)
	function : datatype TK_IDENTIFIER . '(' params ')' block  (7)

	':'  shift 13
	'['  shift 14
	'('  shift 15
	.  error


state 12
	program : var_dec ';' program .  (1)

	.  reduce 1


state 13
	var_dec : datatype TK_IDENTIFIER ':' . literal  (4)

	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 21


state 14
	var_dec : datatype TK_IDENTIFIER '[' . LIT_INTEGER ']' ':' literal_list  (5)
	var_dec : datatype TK_IDENTIFIER '[' . LIT_INTEGER ']'  (6)

	LIT_INTEGER  shift 22
	.  error


state 15
	function : datatype TK_IDENTIFIER '(' . params ')' block  (7)

	KW_INT  shift 1
	KW_FLOAT  shift 2
	KW_BOOL  shift 3
	KW_CHAR  shift 4
	.  error

	datatype  goto 23
	params  goto 24


state 16
	literal : LIT_INTEGER .  (46)

	.  reduce 46


state 17
	literal : LIT_FALSE .  (47)

	.  reduce 47


state 18
	literal : LIT_TRUE .  (48)

	.  reduce 48


state 19
	literal : LIT_CHAR .  (49)

	.  reduce 49


state 20
	literal : LIT_STRING .  (50)

	.  reduce 50


state 21
	var_dec : datatype TK_IDENTIFIER ':' literal .  (4)

	.  reduce 4


state 22
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER . ']' ':' literal_list  (5)
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER . ']'  (6)

	']'  shift 25
	.  error


state 23
	params : datatype . TK_IDENTIFIER ',' params  (8)
	params : datatype . TK_IDENTIFIER  (9)

	TK_IDENTIFIER  shift 26
	.  error


state 24
	function : datatype TK_IDENTIFIER '(' params . ')' block  (7)

	')'  shift 27
	.  error


state 25
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER ']' . ':' literal_list  (5)
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER ']' .  (6)

	':'  shift 28
	';'  reduce 6


state 26
	params : datatype TK_IDENTIFIER . ',' params  (8)
	params : datatype TK_IDENTIFIER .  (9)

	','  shift 29
	')'  reduce 9


state 27
	function : datatype TK_IDENTIFIER '(' params ')' . block  (7)

	'{'  shift 30
	.  error

	block  goto 31


state 28
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' . literal_list  (5)

	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 32
	literal_list  goto 33


state 29
	params : datatype TK_IDENTIFIER ',' . params  (8)

	KW_INT  shift 1
	KW_FLOAT  shift 2
	KW_BOOL  shift 3
	KW_CHAR  shift 4
	.  error

	datatype  goto 23
	params  goto 34


state 30
	block : '{' . commandlist '}'  (10)

	KW_IF  shift 35
	KW_FOR  shift 36
	KW_READ  shift 37
	KW_RETURN  shift 38
	KW_PRINT  shift 39
	.  error

	commandlist  goto 40
	command  goto 41
	ifelse  goto 42
	forloop  goto 43


state 31
	function : datatype TK_IDENTIFIER '(' params ')' block .  (7)

	.  reduce 7


state 32
	literal_list : literal .  (55)
	literal_list : literal . literal_list  (56)

	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	';'  reduce 55

	literal  goto 32
	literal_list  goto 44


state 33
	var_dec : datatype TK_IDENTIFIER '[' LIT_INTEGER ']' ':' literal_list .  (5)

	.  reduce 5


state 34
	params : datatype TK_IDENTIFIER ',' params .  (8)

	.  reduce 8


state 35
	ifelse : KW_IF . '(' expr ')' KW_THEN command  (42)
	ifelse : KW_IF . '(' expr ')' KW_THEN command KW_ELSE command  (43)

	'('  shift 45
	.  error


state 36
	forloop : KW_FOR . '(' expr ')'  (44)
	command : KW_FOR . '(' TK_IDENTIFIER '=' expr "TO" expr ')' command  (45)

	'('  shift 46
	.  error


state 37
	command : KW_READ . TK_IDENTIFIER  (14)

	TK_IDENTIFIER  shift 47
	.  error


state 38
	command : KW_RETURN . expr  (15)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	expr  goto 50
	value  goto 51


state 39
	command : KW_PRINT . print_param_list  (13)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 52
	.  error

	literal  goto 49
	print_param_list  goto 53
	expr  goto 54
	value  goto 51


state 40
	block : '{' commandlist . '}'  (10)

	'}'  shift 55
	.  error


state 41
	commandlist : command . ';' commandlist  (11)
	commandlist : command . ';'  (12)

	';'  shift 56
	.  error


state 42
	command : ifelse .  (16)

	.  reduce 16


state 43
	command : forloop .  (17)

	.  reduce 17


state 44
	literal_list : literal literal_list .  (56)

	.  reduce 56


state 45
	ifelse : KW_IF '(' . expr ')' KW_THEN command  (42)
	ifelse : KW_IF '(' . expr ')' KW_THEN command KW_ELSE command  (43)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	expr  goto 57
	value  goto 51


state 46
	forloop : KW_FOR '(' . expr ')'  (44)
	command : KW_FOR '(' . TK_IDENTIFIER '=' expr "TO" expr ')' command  (45)

	TK_IDENTIFIER  shift 58
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	expr  goto 59
	value  goto 51


state 47
	command : KW_READ TK_IDENTIFIER .  (14)

	.  reduce 14


state 48
	value : TK_IDENTIFIER .  (25)
	value : TK_IDENTIFIER . '[' value ']'  (26)
	value : TK_IDENTIFIER . '(' value_list ')'  (27)

	'['  shift 60
	'('  shift 61
	KW_ELSE  reduce 25
	OPERATOR_LE  reduce 25
	OPERATOR_GE  reduce 25
	OPERATOR_EQ  reduce 25
	OPERATOR_NE  reduce 25
	OPERATOR_AND  reduce 25
	OPERATOR_OR  reduce 25
	TK_IDENTIFIER  reduce 25
	LIT_INTEGER  reduce 25
	LIT_FALSE  reduce 25
	LIT_TRUE  reduce 25
	LIT_CHAR  reduce 25
	LIT_STRING  reduce 25
	';'  reduce 25
	']'  reduce 25
	')'  reduce 25
	'*'  reduce 25
	'/'  reduce 25
	'-'  reduce 25
	'+'  reduce 25
	'<'  reduce 25
	'>'  reduce 25
	"TO"  reduce 25


state 49
	value : literal .  (24)

	.  reduce 24


state 50
	command : KW_RETURN expr .  (15)

	.  reduce 15


state 51
	expr : value .  (22)
	expr : value . operator value  (23)

	OPERATOR_LE  shift 62
	OPERATOR_GE  shift 63
	OPERATOR_EQ  shift 64
	OPERATOR_NE  shift 65
	OPERATOR_AND  shift 66
	OPERATOR_OR  shift 67
	'*'  shift 68
	'/'  shift 69
	'-'  shift 70
	'+'  shift 71
	'<'  shift 72
	'>'  shift 73
	KW_ELSE  reduce 22
	TK_IDENTIFIER  reduce 22
	LIT_INTEGER  reduce 22
	LIT_FALSE  reduce 22
	LIT_TRUE  reduce 22
	LIT_CHAR  reduce 22
	LIT_STRING  reduce 22
	';'  reduce 22
	')'  reduce 22
	"TO"  reduce 22

	operator  goto 74


52: reduce/reduce conflict (reduce 21, reduce 50) on KW_ELSE
52: shift/reduce conflict (shift 48, reduce 50) on TK_IDENTIFIER
52: shift/reduce conflict (shift 16, reduce 50) on LIT_INTEGER
52: shift/reduce conflict (shift 17, reduce 50) on LIT_FALSE
52: shift/reduce conflict (shift 18, reduce 50) on LIT_TRUE
52: shift/reduce conflict (shift 19, reduce 50) on LIT_CHAR
52: shift/reduce conflict (shift 52, reduce 50) on LIT_STRING
52: reduce/reduce conflict (reduce 21, reduce 50) on ';'
state 52
	print_param_list : LIT_STRING . print_param_list  (19)
	print_param_list : LIT_STRING .  (21)
	literal : LIT_STRING .  (50)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 52
	KW_ELSE  reduce 21
	OPERATOR_LE  reduce 50
	OPERATOR_GE  reduce 50
	OPERATOR_EQ  reduce 50
	OPERATOR_NE  reduce 50
	OPERATOR_AND  reduce 50
	OPERATOR_OR  reduce 50
	';'  reduce 21
	'*'  reduce 50
	'/'  reduce 50
	'-'  reduce 50
	'+'  reduce 50
	'<'  reduce 50
	'>'  reduce 50

	literal  goto 49
	print_param_list  goto 75
	expr  goto 54
	value  goto 51


state 53
	command : KW_PRINT print_param_list .  (13)

	.  reduce 13


state 54
	print_param_list : expr . print_param_list  (18)
	print_param_list : expr .  (20)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 52
	KW_ELSE  reduce 20
	';'  reduce 20

	literal  goto 49
	print_param_list  goto 76
	expr  goto 54
	value  goto 51


state 55
	block : '{' commandlist '}' .  (10)

	.  reduce 10


state 56
	commandlist : command ';' . commandlist  (11)
	commandlist : command ';' .  (12)

	KW_IF  shift 35
	KW_FOR  shift 36
	KW_READ  shift 37
	KW_RETURN  shift 38
	KW_PRINT  shift 39
	'}'  reduce 12

	commandlist  goto 77
	command  goto 41
	ifelse  goto 42
	forloop  goto 43


state 57
	ifelse : KW_IF '(' expr . ')' KW_THEN command  (42)
	ifelse : KW_IF '(' expr . ')' KW_THEN command KW_ELSE command  (43)

	')'  shift 78
	.  error


state 58
	value : TK_IDENTIFIER .  (25)
	value : TK_IDENTIFIER . '[' value ']'  (26)
	value : TK_IDENTIFIER . '(' value_list ')'  (27)
	command : KW_FOR '(' TK_IDENTIFIER . '=' expr "TO" expr ')' command  (45)

	'['  shift 60
	'('  shift 61
	'='  shift 79
	OPERATOR_LE  reduce 25
	OPERATOR_GE  reduce 25
	OPERATOR_EQ  reduce 25
	OPERATOR_NE  reduce 25
	OPERATOR_AND  reduce 25
	OPERATOR_OR  reduce 25
	')'  reduce 25
	'*'  reduce 25
	'/'  reduce 25
	'-'  reduce 25
	'+'  reduce 25
	'<'  reduce 25
	'>'  reduce 25


state 59
	forloop : KW_FOR '(' expr . ')'  (44)

	')'  shift 80
	.  error


state 60
	value : TK_IDENTIFIER '[' . value ']'  (26)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	value  goto 81


state 61
	value : TK_IDENTIFIER '(' . value_list ')'  (27)
	value_list : .  (29)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	')'  reduce 29

	literal  goto 49
	value  goto 82
	value_list  goto 83


state 62
	operator : OPERATOR_LE .  (30)

	.  reduce 30


state 63
	operator : OPERATOR_GE .  (31)

	.  reduce 31


state 64
	operator : OPERATOR_EQ .  (32)

	.  reduce 32


state 65
	operator : OPERATOR_NE .  (33)

	.  reduce 33


state 66
	operator : OPERATOR_AND .  (34)

	.  reduce 34


state 67
	operator : OPERATOR_OR .  (35)

	.  reduce 35


state 68
	operator : '*' .  (36)

	.  reduce 36


state 69
	operator : '/' .  (37)

	.  reduce 37


state 70
	operator : '-' .  (38)

	.  reduce 38


state 71
	operator : '+' .  (39)

	.  reduce 39


state 72
	operator : '<' .  (40)

	.  reduce 40


state 73
	operator : '>' .  (41)

	.  reduce 41


state 74
	expr : value operator . value  (23)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	value  goto 84


state 75
	print_param_list : LIT_STRING print_param_list .  (19)

	.  reduce 19


state 76
	print_param_list : expr print_param_list .  (18)

	.  reduce 18


state 77
	commandlist : command ';' commandlist .  (11)

	.  reduce 11


state 78
	ifelse : KW_IF '(' expr ')' . KW_THEN command  (42)
	ifelse : KW_IF '(' expr ')' . KW_THEN command KW_ELSE command  (43)

	KW_THEN  shift 85
	.  error


state 79
	command : KW_FOR '(' TK_IDENTIFIER '=' . expr "TO" expr ')' command  (45)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	expr  goto 86
	value  goto 51


state 80
	forloop : KW_FOR '(' expr ')' .  (44)

	.  reduce 44


state 81
	value : TK_IDENTIFIER '[' value . ']'  (26)

	']'  shift 87
	.  error


state 82
	value_list : value . value_list  (28)
	value_list : .  (29)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	')'  reduce 29

	literal  goto 49
	value  goto 82
	value_list  goto 88


state 83
	value : TK_IDENTIFIER '(' value_list . ')'  (27)

	')'  shift 89
	.  error


state 84
	expr : value operator value .  (23)

	.  reduce 23


state 85
	ifelse : KW_IF '(' expr ')' KW_THEN . command  (42)
	ifelse : KW_IF '(' expr ')' KW_THEN . command KW_ELSE command  (43)

	KW_IF  shift 35
	KW_FOR  shift 36
	KW_READ  shift 37
	KW_RETURN  shift 38
	KW_PRINT  shift 39
	.  error

	command  goto 90
	ifelse  goto 42
	forloop  goto 43


state 86
	command : KW_FOR '(' TK_IDENTIFIER '=' expr . "TO" expr ')' command  (45)

	"TO"  shift 91
	.  error


state 87
	value : TK_IDENTIFIER '[' value ']' .  (26)

	.  reduce 26


state 88
	value_list : value value_list .  (28)

	.  reduce 28


state 89
	value : TK_IDENTIFIER '(' value_list ')' .  (27)

	.  reduce 27


90: shift/reduce conflict (shift 92, reduce 42) on KW_ELSE
state 90
	ifelse : KW_IF '(' expr ')' KW_THEN command .  (42)
	ifelse : KW_IF '(' expr ')' KW_THEN command . KW_ELSE command  (43)

	KW_ELSE  shift 92
	';'  reduce 42


state 91
	command : KW_FOR '(' TK_IDENTIFIER '=' expr "TO" . expr ')' command  (45)

	TK_IDENTIFIER  shift 48
	LIT_INTEGER  shift 16
	LIT_FALSE  shift 17
	LIT_TRUE  shift 18
	LIT_CHAR  shift 19
	LIT_STRING  shift 20
	.  error

	literal  goto 49
	expr  goto 93
	value  goto 51


state 92
	ifelse : KW_IF '(' expr ')' KW_THEN command KW_ELSE . command  (43)

	KW_IF  shift 35
	KW_FOR  shift 36
	KW_READ  shift 37
	KW_RETURN  shift 38
	KW_PRINT  shift 39
	.  error

	command  goto 94
	ifelse  goto 42
	forloop  goto 43


state 93
	command : KW_FOR '(' TK_IDENTIFIER '=' expr "TO" expr . ')' command  (45)

	')'  shift 95
	.  error


state 94
	ifelse : KW_IF '(' expr ')' KW_THEN command KW_ELSE command .  (43)

	.  reduce 43


state 95
	command : KW_FOR '(' TK_IDENTIFIER '=' expr "TO" expr ')' . command  (45)

	KW_IF  shift 35
	KW_FOR  shift 36
	KW_READ  shift 37
	KW_RETURN  shift 38
	KW_PRINT  shift 39
	.  error

	command  goto 96
	ifelse  goto 42
	forloop  goto 43


state 96
	command : KW_FOR '(' TK_IDENTIFIER '=' expr "TO" expr ')' command .  (45)

	.  reduce 45


State 52 contains 6 shift/reduce conflicts, 2 reduce/reduce conflicts.
State 90 contains 1 shift/reduce conflict.


43 terminals, 18 nonterminals
57 grammar rules, 97 states
